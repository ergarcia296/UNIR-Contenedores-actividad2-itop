version: '3.8' # Versi칩n de la especificaci칩n de Docker Compose. Es est치ndar usar '3.8' o superior.

services:
  # ----------------------------------------------------
  # 1. Servicio de Base de Datos (mariadb/mysql)
  # ----------------------------------------------------
  db:
    # El nombre de servicio 'db' se usa como hostname (nombre de host)
    # dentro de la red de Docker para que iTop y phpMyAdmin puedan conectarse.
    image: mysql:8.0
    container_name: itop-db # Nombre fijo para el contenedor (opcional, pero 칰til)
    restart: always # Asegura que el contenedor se reinicie si falla o si Docker se reinicia.
    environment:
      # Variables de entorno esenciales para configurar la base de datos al iniciar el contenedor.
      MYSQL_ROOT_PASSWORD: "itop123" # Contrase침a del usuario 'root' (administrador de la DB).
      MYSQL_DATABASE: "itop"         # Nombre de la base de datos que usar치 iTop.
      MYSQL_USER: "egarcia"          # Nombre del usuario de la aplicaci칩n iTop.
      MYSQL_PASSWORD: "itop"         # Contrase침a del usuario de la aplicaci칩n iTop.
    volumes:
      # Volumen persistente: almacena los datos de la base de datos en el host (db_data)
      # para que no se pierdan al detener o eliminar el contenedor.
      - db_data:/var/lib/mysql
    ports:
      # Mapeo de puertos: "PUERTO_HOST:PUERTO_CONTENEDOR".
      # Permite el acceso a la base de datos desde tu m치quina (localhost:3306).
      - "3306:3306"
    
    # 游뚿 CONFIGURACI칍N CR칈TICA: Healthcheck
    # Define c칩mo Docker debe comprobar si el servicio de base de datos est치 realmente listo
    # para recibir conexiones, resolviendo el error de "dependency failed to start".
    healthcheck:
      # Comando que se ejecuta dentro del contenedor para verificar la salud (un 'ping' a MySQL).
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s       # Frecuencia de la comprobaci칩n.
      timeout: 5s         # Tiempo de espera antes de considerar que la comprobaci칩n fall칩.
      retries: 5          # N칰mero de intentos antes de marcar el servicio como 'unhealthy'.
      start_period: 20s   # Per칤odo inicial para que la DB se levante sin ser marcada como 'unhealthy'.

  # ----------------------------------------------------
  # 2. Servicio de Aplicaci칩n iTop
  # ----------------------------------------------------
  itop:
    build: . # instruccion para que construya la imagen de itop a partir del archivo Dockerfile hubicado en este directorio
    image: itop:v1 # Nombre y tag que le asignara a la imagen
    container_name: itop-app
    restart: always
    # 游뚿 DEPENDENCIA CR칈TICA:
    # Indica que el servicio 'itop' NO debe comenzar hasta que el servicio 'db' est칠 en estado 'healthy' (saludable),
    # gracias al healthcheck que definimos arriba.
    depends_on:
      db:
        condition: service_healthy 
    ports:
      # Mapeo de puertos: Mapea el puerto 80 del contenedor al puerto 80 del host.
      # iTop ser치 accesible en http://localhost o http://[IP_DEL_HOST].
      - "80:80"
    environment:
      # Variables de conexi칩n de iTop con la DB:
      ITOP_DB_HOST: db       # El hostname es el nombre del servicio de la DB.
      ITOP_DB_NAME: itop     # Coincide con MYSQL_DATABASE en el servicio db.
      ITOP_DB_USER: egarcia  # Coincide con MYSQL_USER en el servicio db.
      ITOP_DB_PASS: itop     # Coincide con MYSQL_PASSWORD en el servicio db.
      # Otras variables para configurar PHP (l칤mites de memoria, subidas, etc.)
      PHP_MEMORY_LIMIT: 256M 
      PHP_UPLOAD_MAX_FILESIZE: 8M
    volumes:
      # Volumen persistente: almacena los datos de configuracion de itop
      # para que no se pierdan al detener o eliminar el contenedor.
      - itop_conf:/var/www/html/conf 
      - itop_data:/var/www/html/data 
      - itop_log:/var/www/html/log
      - itop_env-production:/var/www/html/env-production
      - itop_env-production-build:/var/www/html/env-production-build
      - itop_extensions:/var/www/html/extensions

  # ----------------------------------------------------
  # 3. Servicio de phpMyAdmin (Gesti칩n de la DB)
  # ----------------------------------------------------
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: itop-phpmyadmin
    restart: always
    depends_on:
      - db # Simplemente espera a que mariadb est칠 arriba, aunque 'service_healthy' ser칤a m치s robusto.
    ports:
      # Mapeo de puertos: Usa 8081 en el host para evitar el conflicto con iTop (que usa 80).
      # phpMyAdmin ser치 accesible en http://localhost:8081.
      - "8081:80"
    environment:
      # Variables de conexi칩n de phpMyAdmin a la DB:
      PMA_HOST: db  # El hostname es el nombre del servicio de la DB.
      PMA_PORT: 3306     # Puerto interno de la DB.
      PMA_USER: root     # phpMyAdmin generalmente se conecta con el usuario root.
      PMA_PASSWORD: itop123 # Coincide con MYSQL_ROOT_PASSWORD del servicio mariadb.
      
# ----------------------------------------------------
# 4. Definici칩n de Vol칰menes Persistentes
# ----------------------------------------------------
volumes:
  # Volumen para la base de datos (datos de mariadb).
  db_data:      
  # Los siguientes vol칰menes est치n definidos en la secci칩n 'itop'  
  itop_conf:
  itop_data:
  itop_log:
  itop_env-production:
  itop_env-production-build:
  itop_extensions:

